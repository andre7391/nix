#!/bin/sh

# output operations
get_output_volume() {
    mute=$(get_output_mute)
    if [ $mute == "yes" ] ; then 
        echo 0
    else
        pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print $5}' | tr -d '%'
    fi
}

set_output_volume() {
    pactl set-sink-volume @DEFAULT_SINK@ $1%
}

toggle_output_mute() {
    pactl set-sink-mute @DEFAULT_SINK@ toggle
}

get_output_mute() {
    pactl get-sink-mute @DEFAULT_SINK@ | awk '{print $2}'
}

get_output_icon() {
    mute=$(get_output_mute)
    volume=$(get_output_volume)
    if [ $mute == "yes" ] ; then 
        echo 󰝟
    elif ((volume >= 92 )) then 
        echo 󰕾
    elif ((volume >= 46 && volume <= 92)) then 
        echo 󰖀
    else
        echo 󰕿
    fi
}

subscribe_output_volume() {
    get_output_volume
    pactl subscribe | grep --line-buffered "sink" | while read -r line; do
        get_output_volume
    done 
}

subscribe_output_icon() {
    get_output_icon
    pactl subscribe | grep --line-buffered "sink" | while read -r line; do
        get_output_icon
    done 
}


# input operations
get_input_volume() {
    mute=$(get_input_mute)
    if [ $mute == "yes" ] ; then 
        echo 0
    else
        pactl get-source-volume @DEFAULT_SOURCE@ | awk 'NR==1{print $5}' | tr -d '%'
    fi
}

set_input_volume() {
    pactl set-source-volume @DEFAULT_SOURCE@ $1%
}

toggle_input_mute() {
    pactl set-source-mute @DEFAULT_SOURCE@ toggle
}

get_input_mute() {
    pactl get-source-mute @DEFAULT_SOURCE@ | awk '{print $2}'
}

get_input_icon() {
    mute=$(get_input_mute)
    if [ $mute == "yes" ] ; then 
        echo 󰍭
    else
        echo 󰍬
    fi
}

subscribe_input_volume() {
    get_input_volume
    pactl subscribe | grep --line-buffered "sink" | while read -r line; do
        get_input_volume
    done 
}

subscribe_input_icon() {
    get_input_icon
    pactl subscribe | grep --line-buffered "sink" | while read -r line; do
        get_input_icon
    done 
}



# execute a function passsed as argument (ex: audio get_output_volume)
"$@"





